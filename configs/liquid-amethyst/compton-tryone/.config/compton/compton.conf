#=======================================================================================================
#
#
#    █████╗  █████╗ ██╗  ██╗██████╗ ███████╗ █████╗ ██╗  ██╗
#   ██╔══██╗██╔══██╗███╗███║██╔══██╗╚═██╔══╝██╔══██╗███╗ ██║
#   ██║  ╚═╝██║  ██║███████║██████╔╝  ██║   ██║  ██║███████║
#   ██║  ██╗██║  ██║██╔█╔██║██╔═══╝   ██║   ██║  ██║██╔═███║
#   ╚█████╔╝╚█████╔╝██║╚╝██║██║       ██║   ╚█████╔╝██║ ╚██║
#    ╚════╝  ╚════╝ ╚═╝  ╚═╝╚═╝       ╚═╝    ╚════╝ ╚═╝  ╚═╝
#
#
#   compton-tryone configuration by adipopbv (adi.pop.bv@gmail.com).
#   ~/.config/compton/compton.conf - compton config file.
#   Go to https://github.com/tryone144/compton/blob/dual_kawase/man/compton.1.asciidoc for more info.
#
#
#=======================================================================================================

# Shadow
# 	Enable shadows
shadow = false;
# 	Don't draw shadows on drag-and-drop windows
no-dnd-shadow = true;
# 	Don't draw shadows on dock/panel windows
no-dock-shadow = true;
# 	Zero the part of the shadow’s mask behind the window
clear-shadow = true;
# 	The blur radius for shadows
shadow-radius = 7;
# 	The left offset for shadows
shadow-offset-x = -18;
# 	The top offset for shadows
shadow-offset-y = -5;
# 	The opacity for shadows
shadow-opacity = 1;
# 	Red color value of shadow
shadow-red = 0.0; # default = 0
# 	Green color value of shadow
shadow-green = 0.0; # default = 0
# 	Blue color value of shadow
shadow-blue = 0.0; # default = 0
# 	List of conditions of windows that should have no shadow
shadow-exclude = [
	"name = 'Notification'",
	"name = 'gnome-screenshot'", 
	"class_g = 'Cairo-clock'",
	"class_g ?= 'Notify-osd'",
	"_GTK_FRAME_EXTENTS@:c"
];
# 	Crop shadow of a window fully on a particular Xinerama screen to the screen
xinerama-shadow-crop = false;

# Opacity
# 	Opacity of dropdown menus and popup menus
menu-opacity = 1;
# 	Opacity of inactive windows
inactive-opacity = 1;
# 	Opacity of active windows
active-opacity = 1;
# 	Opacity of window titlebars and borders
frame-opacity = 1;
# 	Step for pregenerating alpha pictures
alpha-step = 0.06;
# 	Dim inactive windows
inactive-dim = 0.2;
# 	Use fixed inactive dim value, instead of adjusting according to window opacity
inactive-dim-fixed = false;
# 	Enable background blur
blur-background = false;
# 	Blur background of windows when the window frame is not opaque
blur-background-frame = false;
# 	Blur method (kawase - glx only, convolution)
blur-method = "kawase";
# 	The strength of the kawase blur as an integer between 1 and 20
blur-strength = 10;
# 	Specify the blur convolution kernel
blur-kern = "7x7box";
# 	Use fixed blur strength rather than adjusting according to window opacity
blur-background-fixed = false;
# 	Exclude conditions for background blur
blur-background-exclude = [
	"name = 'gnome-screenshot'", 
	#"window_type = 'dock'",
	"window_type = 'desktop'",
	"_GTK_FRAME_EXTENTS@:c"
];
# 	List of opacity rules
opacity-rule = [
	"100:class_g = 'Rofi'"
];

# Fading
# 	Fade windows in/out when opening/closing and when opacity changes
fading = true;
# 	The time between steps in fade step, in milliseconds
fade-delta = 1.5; # default = 10
# 	Opacity change between steps while fading in
fade-in-step = 0.01;
# 	Opacity change between steps while fading out
fade-out-step = 0.01;
# 	Do not fade on window open/close
no-fading-openclose = false;
# 	Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
no-fading-destroyed-argb = false;
# 	List of conditions of windows that should not be faded
fade-exclude = [ ];

# Other
# 	Specify the backend to use: xrender, glx, or xr_glx_hybrid
backend = "glx"; # default xrender
# 	Try to detect WM windows and mark them as active
mark-wmwin-focused = true;
# 	Mark override-redirect windows that doesn’t have a child window with WM_STATE focused
mark-ovredir-focused = true;
# 	Use EWMH _NET_ACTIVE_WINDOW to determine currently focused window, rather than listening to FocusIn/FocusOut event
use-ewmh-active-win = false;
# 	Try to detect windows with rounded corners and don’t consider them shaped windows
detect-rounded-corners = true;
# 	Detect _NET_WM_OPACITY on client windows
detect-client-opacity = true;
# 	Specify refresh rate of the screen. If not specified or 0, compton will try detecting this with X RandR extension
refresh-rate = 0;
# 	Set VSync method
vsync = "opengl-swc";
# 	Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing
dbe = true;
# 	Painting on X Composite overlay window instead of on root window
paint-on-overlay = true;
# 	Limit compton to repaint at most once every 1 / refresh_rate second to boost performance. This should not be used with --vsync drm/opengl/opengl-oml as they essentially does --sw-opti's job already, unless you wish to specify a lower refresh rate than the actual value
sw-opti = true;
# 	Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows
unredir-if-possible = true;
# 	Delay before unredirecting the window, in milliseconds
unredir-if-possible-delay = 5000; # default = 0
# 	Conditions of windows that shouldn’t be considered full-screen for unredirecting screen
unredir-if-possible-exclude = [ ];
# 	Specify a list of conditions of windows that should always be considered focused
focus-exclude = [
	"class_g = 'Cairo-clock'"
];
# 	Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time
detect-transient = true;
# 	Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time
detect-client-leader = true;
# 	Specify a list of conditions of windows that should be painted with inverted color
invert-color-include = [ ];
# 	Resize damaged region by a specific number of pixels
resize-damage = 1;

# GLX backend
# 	Avoid using stencil buffer
glx-no-stencil = true;
# 	Copy unmodified regions from front buffer instead of redrawing them all
glx-copy-from-front = false;
# 	Use MESA_copy_sub_buffer to do partial screen update. Overrides glx-copy-from-front
glx-use-copysubbuffermesa = false;
# 	Avoid rebinding pixmap on window damage
glx-no-rebind-pixmap = true;
# 	GLX buffer swap method we assume. Could be undefined (0), copy (1), exchange (2), 3-6, or buffer-age (-1)
glx-swap-method = 1;
# 	Use GL_EXT_gpu_shader4 for some optimization on blur GLSL code
glx-use-gpushader4 = true;
# 	Attempt to synchronize client applications' draw calls with XSync(), used on GLX backend to ensure up-to-date window content is painted
xrender-sync = true;
# 	Additionally use X Sync fence to sync clients' draw calls. Needed on nvidia-drivers with GLX backend for some users
xrender-sync-fence = true;

# Window type settings
wintypes:
{
	tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; };
};

