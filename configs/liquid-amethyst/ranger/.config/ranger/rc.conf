#=========================================================================
#
#
#   ██████╗  █████╗ ██╗  ██╗ █████╗ ███████╗██████╗ 
#   ██╔══██╗██╔══██╗███╗ ██║██╔═══╝ ██╔════╝██╔══██╗
#   ██████╔╝███████║███████║██║███╗ █████╗  ██████╔╝
#   ██╔══██╗██╔══██║██╔═███║██║╚═██╗██╔══╝  ██╔══██╗
#   ██║  ██║██║  ██║██║ ╚██║╚█████╔╝███████╗██║  ██║
#   ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚════╝ ╚══════╝╚═╝  ╚═╝
#
#
#   ranger configuration by adipopbv (adi.pop.bv@gmail.com).
#   ~/.config/ranger/rc.conf - ranger options and bindings config file.
#   Go to https://github.com/ranger/ranger/wiki for more info.
#
#
#=========================================================================

# ===== Options =====

# Viewmode
# 	miller: Miller columns showing multiple levels of the hierarchy
# 	multipane: Multipane view showing all tabs next to each other
set viewmode miller

# Columns count and their relative widths
set column_ratios 1,3,3

# Files that should be hidden (regex)
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

# Show hidden files by default
set show_hidden false

# Set linemode
default_linemode devicons

# Ask for confirmation when running 'delete'
# 	always: For all cases
#	never: For no case
#	multiple: If deleting multiple files
set confirm_on_delete multiple

# Preview
# 	Path for file preview script
set preview_script ~/.config/ranger/scope.sh
# 	Use the preview script
set use_preview_script true
# 	Preview files on the rightmost column
set preview_files true
# 	Collapse the last column if there is nothing to preview
set collapse_preview true
# 	Preview directories on the leftmost column
set preview_directories true
# 	Image preview
# 		Enable image previews
set preview_images true
# 		Set the preview image method. Supported methods:
# 			w3m: preview images with the command "w3mimgpreview"
# 			iterm2: preview images using iTerm2 image previews
# 			terminology: previews images in the terminology terminal emulator
# 			urxvt: preview images using urxvt image backgrounds
# 			urxvt-full: the same as urxvt but utilizing not only the preview pane but the whole terminal window
# 			kitty: preview images using kitty image protocol
# 			ueberzug: preview images with the command "ueberzug"
set preview_images_method kitty
# 		Delay in seconds before displaying an image with the w3m method
set w3m_delay 0.02
# 		w3mimg offset when using a terminal which needs tweaking
#set w3m_offset 0
# 		Default iTerm2 font size
set iterm2_font_width 8
set iterm2_font_height 11
# 	Wrap long lines in plain text previews
#set wrap_plaintext_previews true

# Automatically count files in the directory
set automatically_count_files true

# Open all images in the directory when running certain image viewers (feh etc)
set open_all_images false

# Version control
# 	Show version control information about files and directories
set vcs_aware true
# 	State of the backends (git, hg, bzr, svn) 
# 		disabled: do not show anything
# 		local: only show local info
# 		enabled: show local and remote information
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled
# 	Truncate the commit messages when shown in the statusbar
#set vcs_msg_length 50

# Use a unicode "..." character to mark cut-off filenames
set unicode_ellipsis true

# BIDI support for properly displaying file names in RTL languages (Hebrew, Arabic)
set bidi_support false

# Show dotfiles in the bookmark preview box
set show_hidden_bookmarks true

# Set colorscheme (available by default:
# 	default
# 	jungle
# 	snow
# 	solarized)
set colorscheme default

# Save the console history on exit
set save_console_history true

# Draw the status bar on top of the browser window (default: bottom)
set status_bar_on_top false

# Draw a progress bar in the status bar
set draw_progress_bar_in_status_bar true

# Draw borders around columns
# 	separators: draws vertical lines between columns
#	outline: draws a box around all the columns
#	both: combines the two
#	none: no border
set draw_borders none

# Display the directory name in tabs
set dirname_in_tabs false

# Enable mouse support
set mouse_enabled true

# Display the file size in the main column or status bar
set display_size_in_main_column true
set display_size_in_status_bar true

# Display the free disk space in the status bar
set display_free_space_in_status_bar true

# Display files tags in all columns
set display_tags_in_all_columns true

# Set a title for the window
set update_title false

# Set the tmux/screen window-name to "ranger"
set update_tmux_title true

# The number of directories in the title that are displayed at once
set shorten_title 3

# Show hostname in titlebar
set hostname_in_titlebar false

# Abbreviate $HOME with ~ in the titlebar
set tilde_in_titlebar true

# Number of directory-changes or console-commands kept in history
set max_history_size 20
set max_console_history_size 50

# Try to keep so much space between the top/bottom border when scrolling:
set scroll_offset 6

# Flush the input after each key hit
set flushinput true

# Padding on the right when there's no preview
set padding_right false

# Save bookmarks instantly or when ranger is exited
set autosave_bookmarks true

# Save the "`" bookmark to disk (this can be used to switch to the last directory by typing "``")
set save_backtick_bookmark true

# Display the "real" cumulative size of directories
set autoupdate_cumulative_size false

# Show cursor (for screen readers)
set show_cursor false

# Sort items by one of: size, natural, basename, atime, ctime, mtime, type, random
set sort natural

# Additional sorting options
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

# Enable this if key combinations with the Alt Key don't work for you (especially on xterm)
set xterm_alt_key false

# Include bookmarks in cd command
set cd_bookmarks true

# Changes case sensitivity for the cd command tab completion
set cd_tab_case insensitive

# Use fuzzy tab completion with the "cd" command
# 	ex: ":cd /u/lo/b<tab>" expands to ":cd /usr/local/bin"
set cd_tab_fuzzy false

# Files preview max size, in bytes (0 for disabled)
set preview_max_size 0

# The key hint sublists expanded max size
set hint_collapse_threshold 10

# Add the highlighted file to the path in the titlebar
set show_selection_in_titlebar true

# The delay that ranger idly waits for user input, in milliseconds, with a resolution of 100ms
set idle_delay 2000

# Look for metadata in all directories above the current one, not only in the current one
set metadata_deep_search false

# Clear all existing filters when leaving a directory
set clear_filters_on_dir_change false

# Display line numbers in main column
# 	Possible values: false, absolute, relative
set line_numbers relative

# When line_numbers=relative do not show the absolute line number in the current line
set relative_current_zero false

# Start line numbers from 1 instead of 0
set one_indexed false

# Save tabs on exit
set save_tabs_on_exit false

# Enable scroll wrapping
set wrap_scroll true

# Set the global_inode_type_filter
# 	ex: d, f, l and empty for directories, files, symlinks and nothing respectively
set global_inode_type_filter

# Freeze the list of files to save I/O bandwidth
# 	It should be 'false' during start-up
set freeze_files false

# Print file sizes in bytes instead of the default human-readable format
#set size_in_bytes false

# Give a warning when you nest ranger in a subshell started by ranger
# 	Special value "error" makes the warning more visible
#set nested_ranger_warning error

# ===== Local Options =====

# Set sorting for downloads to modification time
 setlocal path=~/downloads sort mtime
 setlocal path=~/Downloads sort mtime

# ===== Command Aliases in the Console =====

alias e     edit
alias q     quit
alias q!    quit!
alias qa    quitall
alias qa!   quitall!
alias qall  quitall
alias qall! quitall!
alias setl  setlocal

alias filter     scout -prts
alias find       scout -aets
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefklst

# ===== Define keys for the browser =====

# Basic
map     Q quitall
map     q quit
copymap q ZZ ZQ

map R     reload_cwd
map F     set freeze_files!
map <C-r> reset
map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal
map ~ set viewmode!

map i display_file
map <A-j> scroll_preview 1
map <A-k> scroll_preview -1
map ? help
map W display_log
map w taskview_open
map S shell $SHELL

map :  console
map ;  console
map !  console shell%space
map @  console -p6 shell  %%s
map #  console shell -p%space
map s  console shell%space
map r  chain draw_possible_programs; console open_with %space
map f  console find%space
map cd console cd%space

map <C-p> chain console; eval fm.ui.console.history_move(-1)

# Change the line mode
map Mf linemode filename
map Mi linemode fileinfo
map Mm linemode mtime
map Mh linemode humanreadablemtime
map Mp linemode permissions
map Ms linemode sizemtime
map MH linemode sizehumanreadablemtime
map Mt linemode metatitle

# Tagging / Marking
map t       tag_toggle
map ut      tag_remove
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True

# VIM-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>

# Jumping around
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map }     traverse
map {     traverse_backwards
map )     jump_non

map gh cd ~
map ge cd /etc
map gu cd /usr
map gd cd /dev
map gl cd -r .
map gL cd -r %f
map go cd /opt
map gv cd /var
map gm cd /media
map gi eval fm.cd('/run/media/' + os.getenv('USER'))
map gM cd /mnt
map gs cd /srv
map gp cd /tmp
map gr cd /
map gR eval fm.cd(ranger.RANGERDIR)
map g/ cd /
map g? cd /usr/share/doc/ranger

# External Programs
map E  edit
map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
map yp yank path
map yd yank dir
map yn yank name
map y. yank name_without_extension

# Filesystem Operations
map =  chmod

map cw console rename%space
map a  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
map phl paste_hardlink
map pht paste_hardlinked_subtree
map pd console paste dest=
map p`<any> paste dest=%any_path
map p'<any> paste dest=%any_path

map dD console delete
map dT shell trash-put %s

map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle

map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle

# Temporary workarounds
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

# Searching
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime

# Windows
map <C-w> shell $TERMINAL -e ranger "`pwd`" & disown

# Tabs
map <C-n>     tab_new
map <C-q>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map gt        tab_move 1
map gT        tab_move -1
map gn        tab_new
map gc        tab_close
map uq        tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9
map <a-r>     tab_shift 1
map <a-l>     tab_shift -1

# Sorting
map or set sort_reverse!
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

map dc get_cumulative_size

# Settings
map zc    set collapse_preview!
map zd    set sort_directories_first!
map zh    set show_hidden!
map <C-h> set show_hidden!
copymap <C-h> <backspace>
copymap <backspace> <backspace2>
map zI    set flushinput!
map zi    set preview_images!
map zm    set mouse_enabled!
map zp    set preview_files!
map zP    set preview_directories!
map zs    set sort_case_insensitive!
map zu    set autoupdate_cumulative_size!
map zv    set use_preview_script!
map zf    console filter%space
copymap zf zz

# Filter stack
map .d filter_stack add type d
map .f filter_stack add type f
map .l filter_stack add type l
map .m console filter_stack add mime%space
map .n console filter_stack add name%space
map .# console filter_stack add hash%space
map ." filter_stack add duplicate
map .' filter_stack add unique
map .| filter_stack add or
map .& filter_stack add and
map .! filter_stack add not
map .r filter_stack rotate
map .c filter_stack clear
map .* filter_stack decompose
map .p filter_stack pop
map .. filter_stack show

# Bookmarks
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg>   draw_bookmarks
copymap m<bg>  um<bg> `<bg> '<bg>

# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

# ===== Define keys for the console =====

# Basic
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Move around
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-b> eval fm.ui.console.move_word(left=1)
cmap <a-f> eval fm.ui.console.move_word(right=1)

copycmap <a-b> <a-left>
copycmap <a-f> <a-right>

# Line Editing
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# Drag-and-drop functionality
map <C-d> shell dragon -a -x %p

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# This special expression allows typing in numerals:
cmap <allow_quantifiers> false

# ===== Pager Keybindings =====

# Movement
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>

# Basic
pmap     <C-l> redraw_window
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

# ===== Taskview Keybindings =====

# Movement
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Changing priority and deleting tasks
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Basic
tmap <C-l> redraw_window
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>

